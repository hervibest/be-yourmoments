// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: photo.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimilarityLevelEnum int32

const (
	SimilarityLevelEnum_SIMILARITY_UNKNOWN SimilarityLevelEnum = 0
	SimilarityLevelEnum_SIMILARITY_LOW     SimilarityLevelEnum = 1
	SimilarityLevelEnum_SIMILARITY_MEDIUM  SimilarityLevelEnum = 2
	SimilarityLevelEnum_SIMILARITY_HIGH    SimilarityLevelEnum = 3
)

// Enum value maps for SimilarityLevelEnum.
var (
	SimilarityLevelEnum_name = map[int32]string{
		0: "SIMILARITY_UNKNOWN",
		1: "SIMILARITY_LOW",
		2: "SIMILARITY_MEDIUM",
		3: "SIMILARITY_HIGH",
	}
	SimilarityLevelEnum_value = map[string]int32{
		"SIMILARITY_UNKNOWN": 0,
		"SIMILARITY_LOW":     1,
		"SIMILARITY_MEDIUM":  2,
		"SIMILARITY_HIGH":    3,
	}
)

func (x SimilarityLevelEnum) Enum() *SimilarityLevelEnum {
	p := new(SimilarityLevelEnum)
	*p = x
	return p
}

func (x SimilarityLevelEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SimilarityLevelEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_photo_proto_enumTypes[0].Descriptor()
}

func (SimilarityLevelEnum) Type() protoreflect.EnumType {
	return &file_photo_proto_enumTypes[0]
}

func (x SimilarityLevelEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SimilarityLevelEnum.Descriptor instead.
func (SimilarityLevelEnum) EnumDescriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{0}
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId      string                 `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Title          string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	OwnedByUserId  string                 `protobuf:"bytes,4,opt,name=owned_by_user_id,json=ownedByUserId,proto3" json:"owned_by_user_id,omitempty"`
	CompressedUrl  string                 `protobuf:"bytes,5,opt,name=compressed_url,json=compressedUrl,proto3" json:"compressed_url,omitempty"`
	IsThisYouUrl   string                 `protobuf:"bytes,6,opt,name=is_this_you_url,json=isThisYouUrl,proto3" json:"is_this_you_url,omitempty"`
	YourMomentsUrl string                 `protobuf:"bytes,7,opt,name=your_moments_url,json=yourMomentsUrl,proto3" json:"your_moments_url,omitempty"`
	CollectionUrl  string                 `protobuf:"bytes,8,opt,name=collection_url,json=collectionUrl,proto3" json:"collection_url,omitempty"`
	Price          int32                  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	PriceStr       string                 `protobuf:"bytes,10,opt,name=price_str,json=priceStr,proto3" json:"price_str,omitempty"`
	OriginalAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=original_at,json=originalAt,proto3" json:"original_at,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Detail         *PhotoDetail           `protobuf:"bytes,14,opt,name=detail,proto3" json:"detail,omitempty"` // Tambahkan ini
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{0}
}

func (x *Photo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Photo) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Photo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Photo) GetOwnedByUserId() string {
	if x != nil {
		return x.OwnedByUserId
	}
	return ""
}

func (x *Photo) GetCompressedUrl() string {
	if x != nil {
		return x.CompressedUrl
	}
	return ""
}

func (x *Photo) GetIsThisYouUrl() string {
	if x != nil {
		return x.IsThisYouUrl
	}
	return ""
}

func (x *Photo) GetYourMomentsUrl() string {
	if x != nil {
		return x.YourMomentsUrl
	}
	return ""
}

func (x *Photo) GetCollectionUrl() string {
	if x != nil {
		return x.CollectionUrl
	}
	return ""
}

func (x *Photo) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Photo) GetPriceStr() string {
	if x != nil {
		return x.PriceStr
	}
	return ""
}

func (x *Photo) GetOriginalAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalAt
	}
	return nil
}

func (x *Photo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Photo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Photo) GetDetail() *PhotoDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type PhotoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhotoId         string                 `protobuf:"bytes,2,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	FileName        string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileKey         string                 `protobuf:"bytes,4,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	Size            int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Type            string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Checksum        string                 `protobuf:"bytes,7,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Width           int32                  `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"` // int8 di Go, gunakan int32 di proto karena tidak ada int8
	Height          int32                  `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Url             string                 `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	YourMomentsType string                 `protobuf:"bytes,11,opt,name=your_moments_type,json=yourMomentsType,proto3" json:"your_moments_type,omitempty"` // Enum nanti bisa kita define kalau perlu
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PhotoDetail) Reset() {
	*x = PhotoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoDetail) ProtoMessage() {}

func (x *PhotoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoDetail.ProtoReflect.Descriptor instead.
func (*PhotoDetail) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{1}
}

func (x *PhotoDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PhotoDetail) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *PhotoDetail) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PhotoDetail) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *PhotoDetail) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PhotoDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhotoDetail) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *PhotoDetail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PhotoDetail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PhotoDetail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PhotoDetail) GetYourMomentsType() string {
	if x != nil {
		return x.YourMomentsType
	}
	return ""
}

func (x *PhotoDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PhotoDetail) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *CreatePhotoRequest) Reset() {
	*x = CreatePhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoRequest) ProtoMessage() {}

func (x *CreatePhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoRequest.ProtoReflect.Descriptor instead.
func (*CreatePhotoRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePhotoRequest) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type CreatePhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreatePhotoResponse) Reset() {
	*x = CreatePhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoResponse) ProtoMessage() {}

func (x *CreatePhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoResponse.ProtoReflect.Descriptor instead.
func (*CreatePhotoResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreatePhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdatePhotoDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoDetail *PhotoDetail `protobuf:"bytes,1,opt,name=photoDetail,proto3" json:"photoDetail,omitempty"`
}

func (x *UpdatePhotoDetailRequest) Reset() {
	*x = UpdatePhotoDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoDetailRequest) ProtoMessage() {}

func (x *UpdatePhotoDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoDetailRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhotoDetailRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePhotoDetailRequest) GetPhotoDetail() *PhotoDetail {
	if x != nil {
		return x.PhotoDetail
	}
	return nil
}

type UpdatePhotoDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdatePhotoDetailResponse) Reset() {
	*x = UpdatePhotoDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoDetailResponse) ProtoMessage() {}

func (x *UpdatePhotoDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoDetailResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhotoDetailResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePhotoDetailResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdatePhotoDetailResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdatePhotographerPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId []string `protobuf:"bytes,2,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Gunakan repeated untuk array
}

func (x *UpdatePhotographerPhotoRequest) Reset() {
	*x = UpdatePhotographerPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotographerPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotographerPhotoRequest) ProtoMessage() {}

func (x *UpdatePhotographerPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotographerPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhotographerPhotoRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePhotographerPhotoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePhotographerPhotoRequest) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type UpdatePhotographerPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdatePhotographerPhotoResponse) Reset() {
	*x = UpdatePhotographerPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotographerPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotographerPhotoResponse) ProtoMessage() {}

func (x *UpdatePhotographerPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotographerPhotoResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhotographerPhotoResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePhotographerPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdatePhotographerPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateFaceRecogPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhotoId []string `protobuf:"bytes,2,rep,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"` // Gunakan repeated untuk array
}

func (x *UpdateFaceRecogPhotoRequest) Reset() {
	*x = UpdateFaceRecogPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFaceRecogPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFaceRecogPhotoRequest) ProtoMessage() {}

func (x *UpdateFaceRecogPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFaceRecogPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdateFaceRecogPhotoRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFaceRecogPhotoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFaceRecogPhotoRequest) GetPhotoId() []string {
	if x != nil {
		return x.PhotoId
	}
	return nil
}

type UpdateFaceRecogPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateFaceRecogPhotoResponse) Reset() {
	*x = UpdateFaceRecogPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFaceRecogPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFaceRecogPhotoResponse) ProtoMessage() {}

func (x *UpdateFaceRecogPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFaceRecogPhotoResponse.ProtoReflect.Descriptor instead.
func (*UpdateFaceRecogPhotoResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFaceRecogPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateFaceRecogPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UserSimilarPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                 // ID unik (jika diperlukan dari client)
	PhotoId    string                 `protobuf:"bytes,2,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`                        // ID foto
	UserId     string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           // ID user
	Similarity SimilarityLevelEnum    `protobuf:"varint,4,opt,name=similarity,proto3,enum=photo.SimilarityLevelEnum" json:"similarity,omitempty"` // Level kemiripan
	IsWishlist bool                   `protobuf:"varint,5,opt,name=is_wishlist,json=isWishlist,proto3" json:"is_wishlist,omitempty"`              // Flag wishlist
	IsResend   bool                   `protobuf:"varint,6,opt,name=is_resend,json=isResend,proto3" json:"is_resend,omitempty"`                    // Flag resend
	IsCart     bool                   `protobuf:"varint,7,opt,name=is_cart,json=isCart,proto3" json:"is_cart,omitempty"`                          // Flag cart
	IsFavorite bool                   `protobuf:"varint,8,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`              // Flag favorite
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                  // Waktu pembuatan
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                 // Waktu pembaruan
}

func (x *UserSimilarPhoto) Reset() {
	*x = UserSimilarPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSimilarPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSimilarPhoto) ProtoMessage() {}

func (x *UserSimilarPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSimilarPhoto.ProtoReflect.Descriptor instead.
func (*UserSimilarPhoto) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{10}
}

func (x *UserSimilarPhoto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserSimilarPhoto) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *UserSimilarPhoto) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSimilarPhoto) GetSimilarity() SimilarityLevelEnum {
	if x != nil {
		return x.Similarity
	}
	return SimilarityLevelEnum_SIMILARITY_UNKNOWN
}

func (x *UserSimilarPhoto) GetIsWishlist() bool {
	if x != nil {
		return x.IsWishlist
	}
	return false
}

func (x *UserSimilarPhoto) GetIsResend() bool {
	if x != nil {
		return x.IsResend
	}
	return false
}

func (x *UserSimilarPhoto) GetIsCart() bool {
	if x != nil {
		return x.IsCart
	}
	return false
}

func (x *UserSimilarPhoto) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *UserSimilarPhoto) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserSimilarPhoto) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateUserSimilarPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoDetail      *PhotoDetail        `protobuf:"bytes,1,opt,name=photoDetail,proto3" json:"photoDetail,omitempty"`
	UserSimilarPhoto []*UserSimilarPhoto `protobuf:"bytes,2,rep,name=user_similar_photo,json=userSimilarPhoto,proto3" json:"user_similar_photo,omitempty"`
}

func (x *CreateUserSimilarPhotoRequest) Reset() {
	*x = CreateUserSimilarPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarPhotoRequest) ProtoMessage() {}

func (x *CreateUserSimilarPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarPhotoRequest.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarPhotoRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{11}
}

func (x *CreateUserSimilarPhotoRequest) GetPhotoDetail() *PhotoDetail {
	if x != nil {
		return x.PhotoDetail
	}
	return nil
}

func (x *CreateUserSimilarPhotoRequest) GetUserSimilarPhoto() []*UserSimilarPhoto {
	if x != nil {
		return x.UserSimilarPhoto
	}
	return nil
}

type CreateUserSimilarPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateUserSimilarPhotoResponse) Reset() {
	*x = CreateUserSimilarPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarPhotoResponse) ProtoMessage() {}

func (x *CreateUserSimilarPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarPhotoResponse.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarPhotoResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{12}
}

func (x *CreateUserSimilarPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUserSimilarPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Facecam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FileName    string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileKey     string                 `protobuf:"bytes,4,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	Title       string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Size        int64                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Checksum    string                 `protobuf:"bytes,7,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Url         string                 `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	IsProcessed bool                   `protobuf:"varint,9,opt,name=is_processed,json=isProcessed,proto3" json:"is_processed,omitempty"`
	OriginalAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=original_at,json=originalAt,proto3" json:"original_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Facecam) Reset() {
	*x = Facecam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Facecam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facecam) ProtoMessage() {}

func (x *Facecam) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facecam.ProtoReflect.Descriptor instead.
func (*Facecam) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{13}
}

func (x *Facecam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Facecam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Facecam) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Facecam) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *Facecam) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Facecam) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Facecam) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Facecam) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Facecam) GetIsProcessed() bool {
	if x != nil {
		return x.IsProcessed
	}
	return false
}

func (x *Facecam) GetOriginalAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalAt
	}
	return nil
}

func (x *Facecam) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Facecam) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateFacecamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facecam *Facecam `protobuf:"bytes,1,opt,name=facecam,proto3" json:"facecam,omitempty"`
}

func (x *CreateFacecamRequest) Reset() {
	*x = CreateFacecamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacecamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacecamRequest) ProtoMessage() {}

func (x *CreateFacecamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacecamRequest.ProtoReflect.Descriptor instead.
func (*CreateFacecamRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{14}
}

func (x *CreateFacecamRequest) GetFacecam() *Facecam {
	if x != nil {
		return x.Facecam
	}
	return nil
}

type CreateFacecamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateFacecamResponse) Reset() {
	*x = CreateFacecamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacecamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacecamResponse) ProtoMessage() {}

func (x *CreateFacecamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacecamResponse.ProtoReflect.Descriptor instead.
func (*CreateFacecamResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{15}
}

func (x *CreateFacecamResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateFacecamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateUserSimilarFacecamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facecam          *Facecam            `protobuf:"bytes,1,opt,name=facecam,proto3" json:"facecam,omitempty"`
	UserSimilarPhoto []*UserSimilarPhoto `protobuf:"bytes,2,rep,name=user_similar_photo,json=userSimilarPhoto,proto3" json:"user_similar_photo,omitempty"`
}

func (x *CreateUserSimilarFacecamRequest) Reset() {
	*x = CreateUserSimilarFacecamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarFacecamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarFacecamRequest) ProtoMessage() {}

func (x *CreateUserSimilarFacecamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarFacecamRequest.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarFacecamRequest) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{16}
}

func (x *CreateUserSimilarFacecamRequest) GetFacecam() *Facecam {
	if x != nil {
		return x.Facecam
	}
	return nil
}

func (x *CreateUserSimilarFacecamRequest) GetUserSimilarPhoto() []*UserSimilarPhoto {
	if x != nil {
		return x.UserSimilarPhoto
	}
	return nil
}

type CreateUserSimilarFacecamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateUserSimilarFacecamResponse) Reset() {
	*x = CreateUserSimilarFacecamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarFacecamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarFacecamResponse) ProtoMessage() {}

func (x *CreateUserSimilarFacecamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarFacecamResponse.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarFacecamResponse) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{17}
}

func (x *CreateUserSimilarFacecamResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUserSimilarFacecamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_photo_proto protoreflect.FileDescriptor

var file_photo_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x04, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x74, 0x68, 0x69, 0x73, 0x5f,
	0x79, 0x6f, 0x75, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x73, 0x54, 0x68, 0x69, 0x73, 0x59, 0x6f, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x79,
	0x6f, 0x75, 0x72, 0x5f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x79, 0x6f, 0x75, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12,
	0x3b, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x96,
	0x03, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x79, 0x6f, 0x75, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x50, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x49, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x49, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x48, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x80, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0a, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43,
	0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x45, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x1e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x98, 0x03, 0x0a, 0x07, 0x46, 0x61,
	0x63, 0x65, 0x63, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07,
	0x66, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x07, 0x66,
	0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x92, 0x01,
	0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x63,
	0x61, 0x6d, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x12, 0x45, 0x0a, 0x12, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x22, 0x50, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2a, 0x6d, 0x0a, 0x13, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x49, 0x4d, 0x49, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x4d, 0x49, 0x4c, 0x41, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x49, 0x4d, 0x49, 0x4c,
	0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x49, 0x4d, 0x49, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47,
	0x48, 0x10, 0x03, 0x32, 0x92, 0x05, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x25, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x19,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61,
	0x6d, 0x12, 0x26, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65,
	0x63, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x12, 0x24, 0x2e, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_photo_proto_rawDescOnce sync.Once
	file_photo_proto_rawDescData = file_photo_proto_rawDesc
)

func file_photo_proto_rawDescGZIP() []byte {
	file_photo_proto_rawDescOnce.Do(func() {
		file_photo_proto_rawDescData = protoimpl.X.CompressGZIP(file_photo_proto_rawDescData)
	})
	return file_photo_proto_rawDescData
}

var file_photo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_photo_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_photo_proto_goTypes = []interface{}{
	(SimilarityLevelEnum)(0),                 // 0: photo.SimilarityLevelEnum
	(*Photo)(nil),                            // 1: photo.Photo
	(*PhotoDetail)(nil),                      // 2: photo.PhotoDetail
	(*CreatePhotoRequest)(nil),               // 3: photo.CreatePhotoRequest
	(*CreatePhotoResponse)(nil),              // 4: photo.CreatePhotoResponse
	(*UpdatePhotoDetailRequest)(nil),         // 5: photo.UpdatePhotoDetailRequest
	(*UpdatePhotoDetailResponse)(nil),        // 6: photo.UpdatePhotoDetailResponse
	(*UpdatePhotographerPhotoRequest)(nil),   // 7: photo.UpdatePhotographerPhotoRequest
	(*UpdatePhotographerPhotoResponse)(nil),  // 8: photo.UpdatePhotographerPhotoResponse
	(*UpdateFaceRecogPhotoRequest)(nil),      // 9: photo.UpdateFaceRecogPhotoRequest
	(*UpdateFaceRecogPhotoResponse)(nil),     // 10: photo.UpdateFaceRecogPhotoResponse
	(*UserSimilarPhoto)(nil),                 // 11: photo.UserSimilarPhoto
	(*CreateUserSimilarPhotoRequest)(nil),    // 12: photo.CreateUserSimilarPhotoRequest
	(*CreateUserSimilarPhotoResponse)(nil),   // 13: photo.CreateUserSimilarPhotoResponse
	(*Facecam)(nil),                          // 14: photo.Facecam
	(*CreateFacecamRequest)(nil),             // 15: photo.CreateFacecamRequest
	(*CreateFacecamResponse)(nil),            // 16: photo.CreateFacecamResponse
	(*CreateUserSimilarFacecamRequest)(nil),  // 17: photo.CreateUserSimilarFacecamRequest
	(*CreateUserSimilarFacecamResponse)(nil), // 18: photo.CreateUserSimilarFacecamResponse
	(*timestamppb.Timestamp)(nil),            // 19: google.protobuf.Timestamp
}
var file_photo_proto_depIdxs = []int32{
	19, // 0: photo.Photo.original_at:type_name -> google.protobuf.Timestamp
	19, // 1: photo.Photo.created_at:type_name -> google.protobuf.Timestamp
	19, // 2: photo.Photo.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 3: photo.Photo.detail:type_name -> photo.PhotoDetail
	19, // 4: photo.PhotoDetail.created_at:type_name -> google.protobuf.Timestamp
	19, // 5: photo.PhotoDetail.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 6: photo.CreatePhotoRequest.photo:type_name -> photo.Photo
	2,  // 7: photo.UpdatePhotoDetailRequest.photoDetail:type_name -> photo.PhotoDetail
	0,  // 8: photo.UserSimilarPhoto.similarity:type_name -> photo.SimilarityLevelEnum
	19, // 9: photo.UserSimilarPhoto.created_at:type_name -> google.protobuf.Timestamp
	19, // 10: photo.UserSimilarPhoto.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 11: photo.CreateUserSimilarPhotoRequest.photoDetail:type_name -> photo.PhotoDetail
	11, // 12: photo.CreateUserSimilarPhotoRequest.user_similar_photo:type_name -> photo.UserSimilarPhoto
	19, // 13: photo.Facecam.original_at:type_name -> google.protobuf.Timestamp
	19, // 14: photo.Facecam.created_at:type_name -> google.protobuf.Timestamp
	19, // 15: photo.Facecam.updated_at:type_name -> google.protobuf.Timestamp
	14, // 16: photo.CreateFacecamRequest.facecam:type_name -> photo.Facecam
	14, // 17: photo.CreateUserSimilarFacecamRequest.facecam:type_name -> photo.Facecam
	11, // 18: photo.CreateUserSimilarFacecamRequest.user_similar_photo:type_name -> photo.UserSimilarPhoto
	7,  // 19: photo.PhotoService.UpdatePhotographerPhoto:input_type -> photo.UpdatePhotographerPhotoRequest
	9,  // 20: photo.PhotoService.UpdateFaceRecogPhoto:input_type -> photo.UpdateFaceRecogPhotoRequest
	3,  // 21: photo.PhotoService.CreatePhoto:input_type -> photo.CreatePhotoRequest
	17, // 22: photo.PhotoService.CreateUserSimilarFacecam:input_type -> photo.CreateUserSimilarFacecamRequest
	15, // 23: photo.PhotoService.CreateFacecam:input_type -> photo.CreateFacecamRequest
	5,  // 24: photo.PhotoService.UpdatePhotoDetail:input_type -> photo.UpdatePhotoDetailRequest
	12, // 25: photo.PhotoService.CreateUserSimilar:input_type -> photo.CreateUserSimilarPhotoRequest
	8,  // 26: photo.PhotoService.UpdatePhotographerPhoto:output_type -> photo.UpdatePhotographerPhotoResponse
	10, // 27: photo.PhotoService.UpdateFaceRecogPhoto:output_type -> photo.UpdateFaceRecogPhotoResponse
	4,  // 28: photo.PhotoService.CreatePhoto:output_type -> photo.CreatePhotoResponse
	18, // 29: photo.PhotoService.CreateUserSimilarFacecam:output_type -> photo.CreateUserSimilarFacecamResponse
	16, // 30: photo.PhotoService.CreateFacecam:output_type -> photo.CreateFacecamResponse
	6,  // 31: photo.PhotoService.UpdatePhotoDetail:output_type -> photo.UpdatePhotoDetailResponse
	13, // 32: photo.PhotoService.CreateUserSimilar:output_type -> photo.CreateUserSimilarPhotoResponse
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_photo_proto_init() }
func file_photo_proto_init() {
	if File_photo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_photo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotographerPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotographerPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFaceRecogPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFaceRecogPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSimilarPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Facecam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacecamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacecamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarFacecamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarFacecamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_photo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_photo_proto_goTypes,
		DependencyIndexes: file_photo_proto_depIdxs,
		EnumInfos:         file_photo_proto_enumTypes,
		MessageInfos:      file_photo_proto_msgTypes,
	}.Build()
	File_photo_proto = out.File
	file_photo_proto_rawDesc = nil
	file_photo_proto_goTypes = nil
	file_photo_proto_depIdxs = nil
}
